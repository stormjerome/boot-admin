package {serviceImplPackageName};

import {groupPackageName}.common.rest.BaseResult;
import {groupPackageName}.common.rest.PageResult;
import {groupPackageName}.common.rest.ResponseCode;
import {daoPackageName}.{daoName};
import {beanPackageName}.{beanName};
import {servicePackageName}.{serviceName};
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import java.util.List;
import java.util.Map;

/**
 * Service实现
 * @author ywy
 * @date
 */
@Service
@Transactional
public class {serviceImplName} implements {serviceName} {
    @Autowired
    private {daoName} {daoParamName};

    @Override
    public BaseResult listByPage(Integer offset, Integer limit, Map<String, Object> params) {
        Integer count = {daoParamName}.count(params);
        List<{beanName}> list = {daoParamName}.listByPage(offset, limit, params);
        PageResult<{beanName}> result = new PageResult<>();
        result.setTotal(count);
        result.setDatas(list);
        return new BaseResult(result);
    }

    @Override
    public BaseResult save({beanName} {beanParamName}) {
        Integer count = {daoParamName}.save({beanParamName});
        if(count > 0) {
            return new BaseResult();
        }
        return new BaseResult(ResponseCode.SAVE_ERROR);
    }

    @Override
    public BaseResult update({beanName} {beanParamName}) {
        Integer count = {daoParamName}.update({beanParamName});
        if(count > 0) {
            return new BaseResult();
        }
        return new BaseResult(ResponseCode.UPDATE_ERROR);
    }

    @Override
    public BaseResult delete(Integer id) {
        Integer count = {daoParamName}.delete(id);
        if (count > 0) {
            return new BaseResult();
        }
        return new BaseResult(ResponseCode.DELETE_ERROR);
    }

    @Override
    public {beanName} get{beanName}ById(Integer id) {
        return {daoParamName}.getById(id);
    }

}
